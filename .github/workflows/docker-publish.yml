name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
    # 仅当对Dockerfile或Java代码进行更改时才触发
    paths:
      - "src/**"
      - "pom.xml"
      - "Dockerfile"
      - ".github/workflows/docker-publish.yml"
  pull_request:
    branches: [ "master" ]
    paths:
      - "src/**"
      - "pom.xml"
      - "Dockerfile"
      - ".github/workflows/docker-publish.yml"

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests

      - name: Get version from pom.xml
        id: version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Convert owner to lowercase
        id: lower_owner
        run: echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/gpt-api-sync:latest

      - name: Create Release
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Release ${{ github.run_number }}
          body: |
            自动发布版本 ${{ github.run_number }}

            ## 更改内容
            - 构建时间: ${{ github.event.head_commit.timestamp }}
            - 提交: ${{ github.sha }}
            - 版本: ${{ env.VERSION }}

            ## Docker镜像
            - `ghcr.io/${{ env.OWNER_LC }}/gpt-api-sync:latest`
          draft: false
          prerelease: false
          files: |
            target/gpt-api-sync-*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
